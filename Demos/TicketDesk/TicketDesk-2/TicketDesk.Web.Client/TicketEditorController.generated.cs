// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace TicketDesk.Web.Client.Controllers
{
    public partial class TicketEditorController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected TicketEditorController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ContentResult MarkdownPreview()
        {
            return new T4MVC_System_Web_Mvc_ContentResult(Area, Name, ActionNames.MarkdownPreview);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Display()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Display);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RefreshHistory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshHistory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RefreshStats()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshStats);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RefreshDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RefreshAttachments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshAttachments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddComment()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Resolve()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Resolve);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult TakeOver()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeOver);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Assign()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Assign);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Close()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Close);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ForceClose()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForceClose);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult GiveUp()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GiveUp);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ReOpen()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReOpen);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult RequestMoreInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RequestMoreInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SupplyMoreInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SupplyMoreInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult CancelMoreInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelMoreInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ModifyAttachments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModifyAttachments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditTicketInfo()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditTicketInfo);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public TicketEditorController Actions { get { return MVC.TicketEditor; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "TicketEditor";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "TicketEditor";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string MarkdownPreview = "MarkdownPreview";
            public readonly string Display = "Display";
            public readonly string RefreshHistory = "RefreshHistory";
            public readonly string RefreshStats = "RefreshStats";
            public readonly string RefreshDetails = "RefreshDetails";
            public readonly string RefreshAttachments = "RefreshAttachments";
            public readonly string AddComment = "AddComment";
            public readonly string Resolve = "Resolve";
            public readonly string TakeOver = "TakeOver";
            public readonly string Assign = "Assign";
            public readonly string Close = "Close";
            public readonly string ForceClose = "ForceClose";
            public readonly string GiveUp = "GiveUp";
            public readonly string ReOpen = "ReOpen";
            public readonly string RequestMoreInfo = "RequestMoreInfo";
            public readonly string SupplyMoreInfo = "SupplyMoreInfo";
            public readonly string CancelMoreInfo = "CancelMoreInfo";
            public readonly string ModifyAttachments = "ModifyAttachments";
            public readonly string EditTicketInfo = "EditTicketInfo";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string MarkdownPreview = "MarkdownPreview";
            public const string Display = "Display";
            public const string RefreshHistory = "RefreshHistory";
            public const string RefreshStats = "RefreshStats";
            public const string RefreshDetails = "RefreshDetails";
            public const string RefreshAttachments = "RefreshAttachments";
            public const string AddComment = "AddComment";
            public const string Resolve = "Resolve";
            public const string TakeOver = "TakeOver";
            public const string Assign = "Assign";
            public const string Close = "Close";
            public const string ForceClose = "ForceClose";
            public const string GiveUp = "GiveUp";
            public const string ReOpen = "ReOpen";
            public const string RequestMoreInfo = "RequestMoreInfo";
            public const string SupplyMoreInfo = "SupplyMoreInfo";
            public const string CancelMoreInfo = "CancelMoreInfo";
            public const string ModifyAttachments = "ModifyAttachments";
            public const string EditTicketInfo = "EditTicketInfo";
        }


        static readonly ActionParamsClass_MarkdownPreview s_params_MarkdownPreview = new ActionParamsClass_MarkdownPreview();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_MarkdownPreview MarkdownPreviewParams { get { return s_params_MarkdownPreview; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_MarkdownPreview
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_Display s_params_Display = new ActionParamsClass_Display();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Display DisplayParams { get { return s_params_Display; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Display
        {
            public readonly string id = "id";
            public readonly string activity = "activity";
        }
        static readonly ActionParamsClass_RefreshHistory s_params_RefreshHistory = new ActionParamsClass_RefreshHistory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RefreshHistory RefreshHistoryParams { get { return s_params_RefreshHistory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RefreshHistory
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_RefreshStats s_params_RefreshStats = new ActionParamsClass_RefreshStats();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RefreshStats RefreshStatsParams { get { return s_params_RefreshStats; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RefreshStats
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_RefreshDetails s_params_RefreshDetails = new ActionParamsClass_RefreshDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RefreshDetails RefreshDetailsParams { get { return s_params_RefreshDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RefreshDetails
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_RefreshAttachments s_params_RefreshAttachments = new ActionParamsClass_RefreshAttachments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RefreshAttachments RefreshAttachmentsParams { get { return s_params_RefreshAttachments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RefreshAttachments
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_AddComment s_params_AddComment = new ActionParamsClass_AddComment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddComment AddCommentParams { get { return s_params_AddComment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddComment
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string resolve = "resolve";
        }
        static readonly ActionParamsClass_Resolve s_params_Resolve = new ActionParamsClass_Resolve();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Resolve ResolveParams { get { return s_params_Resolve; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Resolve
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_TakeOver s_params_TakeOver = new ActionParamsClass_TakeOver();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_TakeOver TakeOverParams { get { return s_params_TakeOver; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_TakeOver
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string priority = "priority";
        }
        static readonly ActionParamsClass_Assign s_params_Assign = new ActionParamsClass_Assign();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Assign AssignParams { get { return s_params_Assign; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Assign
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string assignedTo = "assignedTo";
            public readonly string priority = "priority";
        }
        static readonly ActionParamsClass_Close s_params_Close = new ActionParamsClass_Close();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Close CloseParams { get { return s_params_Close; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Close
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_ForceClose s_params_ForceClose = new ActionParamsClass_ForceClose();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ForceClose ForceCloseParams { get { return s_params_ForceClose; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ForceClose
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_GiveUp s_params_GiveUp = new ActionParamsClass_GiveUp();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GiveUp GiveUpParams { get { return s_params_GiveUp; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GiveUp
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_ReOpen s_params_ReOpen = new ActionParamsClass_ReOpen();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReOpen ReOpenParams { get { return s_params_ReOpen; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReOpen
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string assignToMe = "assignToMe";
            public readonly string ownedByMe = "ownedByMe";
        }
        static readonly ActionParamsClass_RequestMoreInfo s_params_RequestMoreInfo = new ActionParamsClass_RequestMoreInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RequestMoreInfo RequestMoreInfoParams { get { return s_params_RequestMoreInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RequestMoreInfo
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_SupplyMoreInfo s_params_SupplyMoreInfo = new ActionParamsClass_SupplyMoreInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SupplyMoreInfo SupplyMoreInfoParams { get { return s_params_SupplyMoreInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SupplyMoreInfo
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string markActive = "markActive";
        }
        static readonly ActionParamsClass_CancelMoreInfo s_params_CancelMoreInfo = new ActionParamsClass_CancelMoreInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CancelMoreInfo CancelMoreInfoParams { get { return s_params_CancelMoreInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CancelMoreInfo
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ActionParamsClass_ModifyAttachments s_params_ModifyAttachments = new ActionParamsClass_ModifyAttachments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ModifyAttachments ModifyAttachmentsParams { get { return s_params_ModifyAttachments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ModifyAttachments
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
            public readonly string attachments = "attachments";
        }
        static readonly ActionParamsClass_EditTicketInfo s_params_EditTicketInfo = new ActionParamsClass_EditTicketInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditTicketInfo EditTicketInfoParams { get { return s_params_EditTicketInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditTicketInfo
        {
            public readonly string id = "id";
            public readonly string comment = "comment";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Display = "Display";
            }
            public readonly string Display = "~/Views/TicketEditor/Display.aspx";
            static readonly _ControlsClass s_Controls = new _ControlsClass();
            public _ControlsClass Controls { get { return s_Controls; } }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public partial class _ControlsClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
                public class _ViewNamesClass
                {
                    public readonly string ActivityButtons = "ActivityButtons";
                    public readonly string ActivityHistory = "ActivityHistory";
                    public readonly string AddComment = "AddComment";
                    public readonly string Assign = "Assign";
                    public readonly string Attachments = "Attachments";
                    public readonly string CancelMoreInfo = "CancelMoreInfo";
                    public readonly string Close = "Close";
                    public readonly string Details = "Details";
                    public readonly string EditTicketInfo = "EditTicketInfo";
                    public readonly string ForceClose = "ForceClose";
                    public readonly string GiveUp = "GiveUp";
                    public readonly string ModifyAttachments = "ModifyAttachments";
                    public readonly string ReOpen = "ReOpen";
                    public readonly string RequestMoreInfo = "RequestMoreInfo";
                    public readonly string Resolve = "Resolve";
                    public readonly string SupplyMoreInfo = "SupplyMoreInfo";
                    public readonly string TakeOver = "TakeOver";
                    public readonly string TicketStats = "TicketStats";
                }
                public readonly string ActivityButtons = "~/Views/TicketEditor/Controls/ActivityButtons.ascx";
                public readonly string ActivityHistory = "~/Views/TicketEditor/Controls/ActivityHistory.ascx";
                public readonly string AddComment = "~/Views/TicketEditor/Controls/AddComment.ascx";
                public readonly string Assign = "~/Views/TicketEditor/Controls/Assign.ascx";
                public readonly string Attachments = "~/Views/TicketEditor/Controls/Attachments.ascx";
                public readonly string CancelMoreInfo = "~/Views/TicketEditor/Controls/CancelMoreInfo.ascx";
                public readonly string Close = "~/Views/TicketEditor/Controls/Close.ascx";
                public readonly string Details = "~/Views/TicketEditor/Controls/Details.ascx";
                public readonly string EditTicketInfo = "~/Views/TicketEditor/Controls/EditTicketInfo.ascx";
                public readonly string ForceClose = "~/Views/TicketEditor/Controls/ForceClose.ascx";
                public readonly string GiveUp = "~/Views/TicketEditor/Controls/GiveUp.ascx";
                public readonly string ModifyAttachments = "~/Views/TicketEditor/Controls/ModifyAttachments.ascx";
                public readonly string ReOpen = "~/Views/TicketEditor/Controls/ReOpen.ascx";
                public readonly string RequestMoreInfo = "~/Views/TicketEditor/Controls/RequestMoreInfo.ascx";
                public readonly string Resolve = "~/Views/TicketEditor/Controls/Resolve.ascx";
                public readonly string SupplyMoreInfo = "~/Views/TicketEditor/Controls/SupplyMoreInfo.ascx";
                public readonly string TakeOver = "~/Views/TicketEditor/Controls/TakeOver.ascx";
                public readonly string TicketStats = "~/Views/TicketEditor/Controls/TicketStats.ascx";
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_TicketEditorController : TicketDesk.Web.Client.Controllers.TicketEditorController
    {
        public T4MVC_TicketEditorController() : base(Dummy.Instance) { }

        partial void MarkdownPreviewOverride(T4MVC_System_Web_Mvc_ContentResult callInfo, string data);

        public override System.Web.Mvc.ContentResult MarkdownPreview(string data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ContentResult(Area, Name, ActionNames.MarkdownPreview);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            MarkdownPreviewOverride(callInfo, data);
            return callInfo;
        }

        partial void DisplayOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string activity);

        public override System.Web.Mvc.ActionResult Display(int id, string activity)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Display);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "activity", activity);
            DisplayOverride(callInfo, id, activity);
            return callInfo;
        }

        partial void RefreshHistoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        public override System.Web.Mvc.ActionResult RefreshHistory(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshHistory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RefreshHistoryOverride(callInfo, id);
            return callInfo;
        }

        partial void RefreshStatsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        public override System.Web.Mvc.ActionResult RefreshStats(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshStats);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RefreshStatsOverride(callInfo, id);
            return callInfo;
        }

        partial void RefreshDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        public override System.Web.Mvc.ActionResult RefreshDetails(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RefreshDetailsOverride(callInfo, id);
            return callInfo;
        }

        partial void RefreshAttachmentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id);

        public override System.Web.Mvc.ActionResult RefreshAttachments(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RefreshAttachments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            RefreshAttachmentsOverride(callInfo, id);
            return callInfo;
        }

        partial void AddCommentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, bool? resolve);

        public override System.Web.Mvc.ActionResult AddComment(int id, string comment, bool? resolve)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddComment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "resolve", resolve);
            AddCommentOverride(callInfo, id, comment, resolve);
            return callInfo;
        }

        partial void ResolveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult Resolve(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Resolve);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ResolveOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void TakeOverOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, string priority);

        public override System.Web.Mvc.ActionResult TakeOver(int id, string comment, string priority)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.TakeOver);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "priority", priority);
            TakeOverOverride(callInfo, id, comment, priority);
            return callInfo;
        }

        partial void AssignOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, string assignedTo, string priority);

        public override System.Web.Mvc.ActionResult Assign(int id, string comment, string assignedTo, string priority)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Assign);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assignedTo", assignedTo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "priority", priority);
            AssignOverride(callInfo, id, comment, assignedTo, priority);
            return callInfo;
        }

        partial void CloseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult Close(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Close);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            CloseOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void ForceCloseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult ForceClose(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ForceClose);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ForceCloseOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void GiveUpOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult GiveUp(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GiveUp);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            GiveUpOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void ReOpenOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, bool? assignToMe, bool? ownedByMe);

        public override System.Web.Mvc.ActionResult ReOpen(int id, string comment, bool? assignToMe, bool? ownedByMe)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ReOpen);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "assignToMe", assignToMe);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ownedByMe", ownedByMe);
            ReOpenOverride(callInfo, id, comment, assignToMe, ownedByMe);
            return callInfo;
        }

        partial void RequestMoreInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult RequestMoreInfo(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RequestMoreInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            RequestMoreInfoOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void SupplyMoreInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, bool? markActive);

        public override System.Web.Mvc.ActionResult SupplyMoreInfo(int id, string comment, bool? markActive)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SupplyMoreInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "markActive", markActive);
            SupplyMoreInfoOverride(callInfo, id, comment, markActive);
            return callInfo;
        }

        partial void CancelMoreInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult CancelMoreInfo(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CancelMoreInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            CancelMoreInfoOverride(callInfo, id, comment);
            return callInfo;
        }

        partial void ModifyAttachmentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment, System.Collections.Generic.List<TicketDesk.Domain.Models.TicketAttachment> attachments);

        public override System.Web.Mvc.ActionResult ModifyAttachments(int id, string comment, System.Collections.Generic.List<TicketDesk.Domain.Models.TicketAttachment> attachments)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ModifyAttachments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "attachments", attachments);
            ModifyAttachmentsOverride(callInfo, id, comment, attachments);
            return callInfo;
        }

        partial void EditTicketInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string comment);

        public override System.Web.Mvc.ActionResult EditTicketInfo(int id, string comment)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditTicketInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "comment", comment);
            EditTicketInfoOverride(callInfo, id, comment);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
